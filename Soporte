package soporte.tecnico;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;

public class SoprteTecnico {

    private static final String ARCHIVO = "C:/soporte/chat_soporte.txt";

    public static void main(String[] args) {
        JFrame frame = new JFrame("Estudiante-Soporte Tecnico");
        frame.setSize(400, 300);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setBackground(new Color(173, 216, 230)); // celeste

        JTextArea chatArea = new JTextArea();
        chatArea.setEditable(false);
        frame.add(new JScrollPane(chatArea), BorderLayout.CENTER);

        JTextField inputField = new JTextField();
        JButton enviarBtn = new JButton("Enviar");

        JPanel panel = new JPanel(new BorderLayout());
        panel.add(inputField, BorderLayout.CENTER);
        panel.add(enviarBtn, BorderLayout.EAST);
        frame.add(panel, BorderLayout.SOUTH);

        enviarBtn.addActionListener(e -> enviarMensaje("Estudiante", inputField, chatArea));
        inputField.addActionListener(e -> enviarMensaje("Estudiante", inputField, chatArea));

        Timer timer = new Timer(2000, e -> actualizarChat(chatArea));
        timer.start();

        frame.setVisible(true);
    }

    private static void enviarMensaje(String remitente, JTextField campo, JTextArea area) {
        String mensaje = campo.getText().trim();

        if (mensaje.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El mensaje debe de contener informacion.");
            return;
        }

        if (mensaje.length() > 255) {
            JOptionPane.showMessageDialog(null, "El mensaje supera los 255 caracteres.");
            return;
        }

        try {
            File carpeta = new File("C:/soporte");
            if (!carpeta.exists()) {
                carpeta.mkdirs();
            }

            FileWriter writer = new FileWriter(ARCHIVO, true);

            // Estudiante envía mensajes con estado NO LEÍDO
            if (remitente.equals("Estudiante")) {
                writer.write(remitente + ": " + mensaje + " [No leido]\n");
            } else {
                writer.write(remitente + ": " + mensaje + "\n");
            }

            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        campo.setText("");
    }

    private static void actualizarChat(JTextArea area) {
        File archivo = new File(ARCHIVO);
        if (!archivo.exists()) return;

        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            area.setText("");
            String linea;
            while ((linea = reader.readLine()) != null) {
                area.append(linea + "\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
